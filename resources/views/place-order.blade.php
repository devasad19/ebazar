@extends('apps.front_master')
@section('content')
<section class="max-w-4xl mx-auto px-6 py-12">
    <h2 class="text-3xl font-bold text-green-700 mb-6 text-center">üõí Checkout</h2>

    @if(count($cartItems) > 0)
    <div class="bg-white rounded-2xl shadow p-6 mb-6">
        <h3 class="text-xl font-semibold text-gray-700 mb-4">‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡¶£‡ßç‡¶Ø‡¶∏‡¶Æ‡ßÇ‡¶π</h3>
        <div class="space-y-3">
@foreach($cartItems as $cart)
<div class="cart-item flex justify-between items-center border-b pb-3" data-id="{{ $cart->id }}">
    <div class="flex items-center gap-3">
        <img src="{{ $cart->product->image ? url('uploads/products/'.$cart->product->image) : '' }}"
             class="w-16 h-16 object-cover rounded-lg">
        <div>
            <h4 class="font-semibold text-gray-800">{{ $cart->product->name }}</h4>

            <div class="flex items-center mt-2">
                <button type="button" class="bg-indigo-500 text-white px-3 py-1 rounded-l-full" onclick="changeQty(this, 'decrease')">-</button>
                <input type="number" value="{{ $cart->quantity }}" min="1"
                       class="w-16 text-center border-t border-b border-green-300 focus:outline-none focus:ring-2 focus:ring-green-300 py-1 mx-1">
                <button type="button" class="bg-indigo-500 text-white px-3 py-1 rounded-r-full" onclick="changeQty(this, 'increase')">+</button>
            </div>
        </div>
    </div>

    <div class="flex flex-col items-end">
        <p class="text-green-600 ">‡ß≥{{ $cart->price }} X <span class="itemQty">{{ $cart->quantity }}</span> </p>
    </div>

    <div class="flex flex-col items-end">
        <p>Item Total: <span class="text-green-600 font-semibold itemTotal">‡ß≥{{ $cart->price * $cart->quantity }}</span></p>
        <button type="button" class="text-red-500 hover:text-red-700 mt-1 text-lg font-bold" onclick="removeItem(this)">‚ùå</button>
    </div>
</div>
@endforeach
 
        </div>
        <div class="flex justify-between mt-6 text-lg font-bold text-green-700">
            <span>‡¶Æ‡ßã‡¶ü</span>
            <span id="cartTotal">‡ß≥{{ $total }} <span class="text-sm text-gray-600 mb-1">+ ‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø ‡¶ö‡¶æ‡¶∞‡ßç‡¶ú</span></span>
        </div>
        <p class="text-sm text-red-500 mt-3 text-right">‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø ‡¶ö‡¶æ‡¶∞‡ßç‡¶ú‡¶É ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡¶æ‡ßú‡¶ø ‡¶•‡ßá‡¶ï‡ßá ‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞‡ßá‡¶∞ ‡¶¶‡ßÇ‡¶∞‡¶§‡ßç‡¶¨, ‡¶≠‡ßá‡¶® ‡¶¨‡¶æ ‡¶Ö‡¶ü‡ßã‡¶∞‡¶ø‡¶ï‡¶∂‡¶æ‡¶∞ ‡¶≠‡¶æ‡ßú‡¶æ‡¶∞ ‡¶∏‡¶Æ‡¶æ‡¶®‡•§</p>
    </div>

    <div class="bg-white rounded-2xl shadow p-6">
        <h3 class="text-xl font-semibold text-gray-700 mb-4">‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø ‡¶§‡¶•‡ßç‡¶Ø</h3>
        
        <form action="{{ route('place.order') }}" method="POST" class="space-y-4">
            @csrf
 

            <!-- Name -->
            <div class="flex flex-col">
                <label for="name" class="text-sm text-gray-600 mb-1">‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ</label>
                <input type="text" name="name" id="name" value="{{ $user->name }}" 
                    class="w-full border px-3 py-2 rounded-lg focus:ring-2 focus:ring-green-400 outline-none" readonly>
            </div>

            <!-- Father's Name -->
            <div class="flex flex-col">
                <label for="father_name" class="text-sm text-gray-600 mb-1">‡¶™‡¶ø‡¶§‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ</label>
                <input type="text" name="father_name" id="father_name" value="{{ $user->father_name }}" 
                    class="w-full border px-3 py-2 rounded-lg focus:ring-2 focus:ring-green-400 outline-none" readonly>
            </div>

            <!-- New Address Checkbox -->
            <div class="flex items-center gap-2">
                <input type="checkbox" id="newAddress" class="form-checkbox h-5 w-5 text-green-600">
                <label for="newAddress" class="text-sm text-gray-700">‡¶®‡¶§‡ßÅ‡¶® ‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®</label>
            </div>

            <!-- Address -->
            <div class="flex flex-col">
                <label for="addressInput" class="text-sm text-gray-600 mb-1">‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ</label>
                <input type="text" name="address" id="addressInput" 
                    value="{{ $user->address }}" 
                    class="w-full border px-3 py-2 rounded-lg focus:ring-2 focus:ring-green-400 outline-none" 
                    placeholder="‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ" readonly>
            </div>

            <!-- Phone -->
            <div class="flex flex-col">
                <label for="phoneInput" class="text-sm text-gray-600 mb-1">‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞</label>
                <input type="tel" name="phone" id="phoneInput" 
                    value="{{ $user->phone }}" 
                    class="w-full border px-3 py-2 rounded-lg focus:ring-2 focus:ring-green-400 outline-none" 
                    placeholder="‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞" readonly>
            </div>

            <button type="submit" class="bg-green-600 text-white w-full py-3 rounded-lg hover:bg-green-700 transition font-semibold">
                ‚úÖ ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ï‡¶®‡¶´‡¶æ‡¶∞‡ßç‡¶Æ ‡¶ï‡¶∞‡ßÅ‡¶®
            </button>
        </form>
    </div>
    @else
        <p class="text-center text-gray-500">‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶∞‡ßç‡¶ü ‡¶ñ‡¶æ‡¶≤‡¶ø‡•§</p>
    @endif
</section>





<!-- Quantity Updated Notification -->
<div id="qtyNotification" 
     class="fixed bottom-5 right-5 bg-green-600 text-white px-4 py-2 rounded-lg shadow-lg opacity-0 transition-opacity duration-300 z-50">
  ‚úÖ Quantity updated
</div>



@endsection

@section('scripts')
<script>


function showQtyNotification() {
    const notif = document.getElementById('qtyNotification');
    if (!notif) return;

    notif.classList.remove('opacity-0');
    notif.classList.add('opacity-100');

    // ‡ß® ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶° ‡¶™‡¶∞‡ßá ‡¶Ü‡¶¨‡¶æ‡¶∞ fade out ‡¶π‡¶¨‡ßá
    setTimeout(() => {
        notif.classList.remove('opacity-100');
        notif.classList.add('opacity-0');
    }, 2000);
}



 
// üîπ Quantity Change
function changeQty(btn, type) {
    const item = btn.closest('.cart-item'); 
    if (!item) return;

    const input = item.querySelector('input');
    let qty = parseInt(input.value);
    qty = (type === 'increase') ? qty + 1 : Math.max(1, qty - 1);
    input.value = qty;
   // ‚úÖ ‡¶∏‡¶†‡¶ø‡¶ï‡¶≠‡¶æ‡¶¨‡ßá .itemQty ‡¶∏‡¶ø‡¶≤‡ßá‡¶ï‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®
    const itemQty = item.querySelector('.itemQty');
    if (itemQty) {
        itemQty.textContent = qty; // text ‡¶®‡ßü, textContent ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®
    }

    const id = item.dataset.id;

    $.ajax({
        url: "{{ route('cart.update') }}",
        method: 'POST',
        data: { id, quantity: qty },
        success: function(data) {
            if (data.success) {
                item.querySelector('.itemTotal').innerText = `‡ß≥${data.itemTotal}`;
                document.getElementById('cartTotal').innerText = `‡ß≥${data.cartTotal}`;
                showToast('success', 'Updated', '‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£ ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶π‡ßü‡ßá‡¶õ‡ßá ‚úÖ');
            } else {
                showToast('error', 'Failed', '‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶• ‡¶π‡ßü‡ßá‡¶õ‡ßá ‚ùå');
            }
        },
        error: function(xhr) {
            showToast('error', 'Server Error', '‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶æ‡¶∞‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá!');
            console.log(xhr.responseJSON?.message || 'Something went wrong!');
        }
    });
}

// üîπ Remove Item
function removeItem(btn) {
    const item = btn.closest('.cart-item');
    if (!item) return;

    const id = item.dataset.id;

    swalConfirm('‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡¶ø ‡¶è‡¶á ‡¶™‡¶£‡ßç‡¶Ø‡¶ü‡¶ø ‡¶ï‡¶æ‡¶∞‡ßç‡¶ü ‡¶•‡ßá‡¶ï‡ßá ‡¶Æ‡ßÅ‡¶õ‡ßá ‡¶´‡ßá‡¶≤‡¶§‡ßá ‡¶ö‡¶æ‡¶®?', function() {
        $.ajax({
            url: "{{ route('cart.remove') }}",
            method: 'POST',
            data: { id },
            success: function(data) {
                if (data.success) {
                    item.remove();
                    document.getElementById('cartTotal').innerText = `‡ß≥${data.cartTotal}`;
                    showToast('success', 'Removed', '‡¶™‡¶£‡ßç‡¶Ø‡¶ü‡¶ø ‡¶Æ‡ßÅ‡¶õ‡ßá ‡¶´‡ßá‡¶≤‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá üóëÔ∏è');
                } else {
                    showToast('error', 'Failed', '‡¶∞‡¶ø‡¶Æ‡ßÅ‡¶≠ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø!');
                }
            },
            error: function(xhr) {
                showToast('error', 'Server Error', '‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶æ‡¶∞‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá!');
                console.log(xhr.responseJSON?.message || 'Something went wrong!');
            }
        });
    });
}
 
 
  

 
    const newAddressCheckbox = document.getElementById('newAddress');
    const addressInput = document.getElementById('addressInput');
    const phoneInput = document.getElementById('phoneInput');

    newAddressCheckbox.addEventListener('change', function() {
        if(this.checked) {
            addressInput.removeAttribute('readonly');
            phoneInput.removeAttribute('readonly');
            addressInput.focus();
        } else {
            addressInput.setAttribute('readonly', true);
            phoneInput.setAttribute('readonly', true);
        }
    });
</script>

@endsection
